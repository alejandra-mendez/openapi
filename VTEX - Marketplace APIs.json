{
    "openapi": "3.0.0",
    "info": {
        "title": "Marketplace API",
        "description": "The Marketplace APIs are a set of API requests used by marketplaces and sellers in their operations.",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/{accountName}.{environment}.com.br/api/notificator/{sellerId}/changenotification/{skuId}/price": {
            "post": {
                "tags": ["Notification"],
                "summary": "Notify marketplace of price update",
                "description": "This endpoint is used by *sellers* to notify marketplaces that the price has changed for one of their SKUs. \n\nThere is no request body in this call, indicating the new price value, for instance. It only notifies a specific marketplace (`accountName`) that a seller (`sellerId`) has changed the price of an SKU (`skuId`). \n\n*Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/reference/external-seller#fulfillment-simulation) provided in the seller registration form to get the updated price information.",
                "operationId": "PriceNotification",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. The notification will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "A string that identifies the seller's SKU that suffered the change. This is the ID that the marketplace will use for all  references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/notificator/{sellerId}/changenotification/{skuId}/inventory": {
            "post": {
                "tags": ["Notification"],
                "summary": "Notify marketplace of inventory update",
                "description": "This endpoint is used by *sellers* to notify marketplaces that the inventory level has changed for one of their SKUs. \n\nThere is no request body in this call, indicating the new inventory level, for instance. It only notifies a specific marketplace (`accountName`) that a seller (`sellerId`) has changed the inventory level of an SKU (`skuId`). \n\n*Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/reference/external-seller#fulfillment-simulation) provided in the seller registration form to get the updated inventory  information.",
                "operationId": "InventoryNotification",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. The notification will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "A string that identifies the SKU in the seller, that suffered the change. This is the ID that the marketplace will use for all  references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/configuration/autoapproval/toggle": {
            "get": {
                "tags": ["SKU Approval Settings"],
                "summary": "Get autoApprove Status in Account Settings",
                "description": "This endpoint can be used to check whether the autoapprove setting is active or not, for a specific seller. If the response is `true`, the autoapprove setting is active. If the response is `false`, it is inactive.",
                "operationId": "GetautoApprovevaluefromconfig",
                "parameters": [
                    {
                        "name": "sellerId",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["SKU Approval Settings"],
                "summary": "Activate autoApprove in Marketplace's Account",
                "description": "This endpoint enables the autoapprove rule to a marketplace’s whole Received SKUs module. Be aware that once enabling the rule through this request, all received SKUs will be automatically approved on your store, regardless of the seller or the Matcher Score.",
                "operationId": "Saveautoapproveforaccount",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/configuration": {
            "get": {
                "tags": ["SKU Approval Settings"],
                "summary": "Get Account's Approval Settings",
                "description": "This endpoint retrieves the current approval settings of a marketplace’s Received SKUs module.  Its response includes: \n\n- `Score`: Matcher scores for approving and rejecting SKUs received from sellers. \n\n- `Matchers`: All Matchers configured on the marketplace, and their respective details. \n\n- `SpecificationsMapping`: Mapping of product and SKU specifications, per seller. \n\n- `MatchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:  \n\n`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n`manual`, for manual approvals through the Received SKU UI, or Match API. \n\n`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.",
                "operationId": "Getaccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["SKU Approval Settings"],
                "summary": "Save Account's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings on their Received SKUs module. The request includes all the details necessary to implement the chosen approval settings.",
                "operationId": "Saveaccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveaccountconfigRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/configuration/seller/{sellerId}": {
            "get": {
                "tags": ["SKU Approval Settings"],
                "summary": "Get Seller's Approval Settings",
                "description": "This endpoint retrieves the current Received SKUs approval settings applied to a specific seller. Its response includes: \n\n- `sellerId`: A string that identifies the seller in the marketplace. \n\n- `accountId`: Marketplace’s account ID. \n\n- `accountName`: Marketplace’s account name. \n\n- `mapping`: Mapping of SKU and product Specifications. \n\n- `matchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:  \n\n`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n`manual`, for manual approvals through the Received SKU UI and Match API. \n\n`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                "operationId": "Getselleraccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["SKU Approval Settings"],
                "summary": "Save Seller's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings to a specific seller, on the Received SKUs module. The request includes all the details necessary to implement the chosen approval settings.",
                "operationId": "Putselleraccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutselleraccountconfigRequest"
                            },
                            "example": {
                                "sellerId": "1a",
                                "mapping": null,
                                "matchFlux": "Default"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/configuration/autoapproval/toggle/seller/{sellerId}": {
            "put": {
                "tags": ["SKU Approval Settings"],
                "summary": "Activate autoApprove Setting for a Seller",
                "description": "This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.",
                "operationId": "Saveautoapproveforaccountseller",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountsellerRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions": {
            "get": {
                "tags": ["Get Suggestions"],
                "summary": "Get all SKU suggestions",
                "description": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "Getsuggestions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available filters on Received SKU modules.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "This field allows users to filter SKU suggestions, by searching only the new suggestions that were just sent, and suggestions that have already been sent, but were updated. Possible values for this field include `new` and `update`.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "new"
                        }
                    },
                    {
                        "name": "seller",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller so it can call this endpoint.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "accepted"
                        }
                    },
                    {
                        "name": "hasmapping",
                        "in": "query",
                        "description": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    },
                    {
                        "name": "matcherid",
                        "in": "query",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "vtex-matcher"
                        }
                    },
                    {
                        "name": "_from",
                        "in": "query",
                        "description": "Define your pagination range, by adding the pagination starting value. Values should be bigger than 0, with a maximum of 50 records per page.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "_to",
                        "in": "query",
                        "description": "Define your pagination range, by adding the pagination ending value. Values should be bigger than 0, with a maximum of 50 records per page.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 50
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerSkuId}": {
            "put": {
                "tags": ["Manage Suggestions"],
                "summary": "Send SKU Suggestion",
                "description": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/reference/catalog-api-sku-seller#catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Send Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below. ",
                "operationId": "SaveSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/vnd.vtex.suggestion.v0+json",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerSkuId",
                        "in": "path",
                        "description": "A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveSuggestionRequest"
                            },
                            "example": {
                                "ProductId": 321,
                                "ProductName": "Product sample",
                                "NameComplete": "Complete product name",
                                "ProductDescription": "sample",
                                "BrandName": "Brand 1",
                                "SkuName": "Sku sample",
                                "SellerId": null,
                                "Height": 1,
                                "Width": 1,
                                "Length": 1,
                                "WeightKg": 1,
                                "Updated": null,
                                "RefId": "REFID123",
                                "SellerStockKeepingUnitId": 567,
                                "CategoryFullPath": "Category 1",
                                "Images": [
                                    {
                                        "imageName": "Principal",
                                        "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                                    }
                                ],
                                "ProductSpecifications": [
                                    {
                                        "fieldName": "prodspec1",
                                        "fieldValues": "value1"
                                    }
                                ],
                                "SkuSpecifications": [
                                    {
                                        "fieldName": "skuspec1",
                                        "fieldValues": ["value2"]
                                    }
                                ],
                                "EAN": "EAN123",
                                "MeasurementUnit": "un",
                                "UnitMultiplier": 1,
                                "AvailableQuantity": 111,
                                "Pricing": {
                                    "Currency": "BRL",
                                    "SalePrice": 399,
                                    "CurrencySymbol": "R$"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Get Suggestions"],
                "summary": "Get SKU Suggestion by ID",
                "description": "This endpoint retrieves the data of a specific SKU sent by the seller, to the marketplace. Marketplaces or external matchers can call this endpoint when they want to check the information about a single SKU. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "GetSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Manage Suggestions"],
                "summary": "Delete SKU Suggestion",
                "description": "This endpoint deletes a chosen SKU suggestion. Only one SKU should be deleted per request. This request cannot be undone. A workaround to revert its action, is to send the suggestion again, through the Send Suggestion API.",
                "operationId": "DeleteSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions": {
            "get": {
                "tags": ["Get Versions"],
                "summary": "Get all Versions",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. The response's object [latestversion] provides the information of the most recent version of that SKU suggestion.",
                "operationId": "GetVersions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions/{version}": {
            "get": {
                "tags": ["Get Versions"],
                "summary": "Get Version by ID",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.",
                "operationId": "GetSuggestionbyversion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id). through the `latestVersionId` field.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions/{version}/matches/{matchid}": {
            "put": {
                "tags": ["Match Received SKUs"],
                "summary": "Match Received SKUs individually",
                "description": "All SKUs sent from a seller to a marketplace must be reviewed and matched. Actions in the matching process are added in the request body through the [matchType] object. Match type actions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "Match",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id). through the `latestVersionId` field.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchid",
                        "in": "path",
                        "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the *[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchRequest"
                            },
                            "example": {
                                "matcherId": "{{matcherid}}",
                                "score": "{{score}} (must be decimal)",
                                "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                                "productRef": "{{productRef}}(should be specified when match is a product match)",
                                "product": {
                                    "name": "Produto exemplo",
                                    "description": "Descricao exemplo",
                                    "categoryId": 12,
                                    "brandId": 1234567,
                                    "specifications": null
                                },
                                "sku": {
                                    "name": "Sku exemplo",
                                    "eans": ["12345678901213"],
                                    "refId": null,
                                    "height": 1,
                                    "width": 1,
                                    "length": 1,
                                    "weight": 1,
                                    "images": {
                                        "imagem1.jpg": "https://imageurl.example"
                                    },
                                    "unitMultiplier": 1,
                                    "measurementUnit": "un",
                                    "specifications": {
                                        "Embalagem": "3 kg"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/matches/action/{actionName}": {
            "put": {
                "tags": ["Match Received SKUs"],
                "summary": "Match Multiple Received SKUs",
                "description": "This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
                "operationId": "MatchMultiple",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "actionName",
                        "in": "path",
                        "description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "newprodcut"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/MatchMultiple"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/api.vtex.com/{accountName}/suggestions/seller/{sellerId}/item/{sellerSkuId}/review": {
            "get": {
                "tags": ["Review Received SKUs"],
                "summary": "Get SKU’s review information",
                "description": "The **Review Received SKUs** API allows marketplace operators to request sellers to review the sent SKUs that were either refused or pending approval. Thus, marketplace operators can point out the exact fields that need sellers’ review. This endpoint allows the user to retrieve the review information from a specific SKU. This call's response includes the following attributes: \n\n",
                "operationId": "GetReview",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["Review Received SKUs"],
                "summary": "Request SKU review from seller",
                "description": "The **Review Received SKUs** API allows marketplace operators to request sellers to review the sent SKUs that were either refused or pending approval. This endpoint allows marketplace operators to point out the exact fields that need sellers’ review, for a specific SKU.  \n\nNote that only one request per SKU is allowed. After operators submitted their first request through this call’s operation, another request can’t be executed in sequence. Operators must wait for the seller to update the SKU in question, and then submit another request, if necessary. Thus, be mindful that you won’t be able to update that initial request. \n\nOperators can add as many custom fields to their request body as they like. The field’s names can also be customized, so sellers know exactly what fields need their review.",
                "operationId": "PutReview",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewFields"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/portal.vtexcommercestable.com.br/api/offer-manager/pvt/product/{productId}/sku/{skuId}": {
            "get": {
                "tags": ["Matched Offers"],
                "summary": "Get Matched Offer's Data by SKU ID",
                "description": "Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. This endpoint retrieves the available offers for a speciic SKU ID in the marketplace's catalog. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace operator, and are currently active in its catalog. \nThe call returns a list of offers for that ID, that contain the following data: \n\n- Seller that sells the SKU \n\n- Correspondent SKU ID \n\n- SKU's price value \n\n- Inventory level \n\n- Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) that it is available at.",
                "operationId": "GetSKUoffers",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "A string that identifies the seller's product. This is the ID that the marketplace will use for all references to this product, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "123456"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "A string that identifies the seller's SKU. This is the ID that the marketplace will use for all references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/portal.vtexcommercestable.com.br/api/offer-manager/pvt/product/{productId}": {
            "get": {
                "tags": ["Matched Offers"],
                "summary": "Get Matched Offer's Data by Product ID",
                "description": "Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. This endpoint retrieves the available offers for a speciic Product ID in the marketplace's catalog. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace operator, and are currently active in its catalog. \n\nThe call returns a list of offers for that ID, that contain the following data: \n\n- Seller that sells the SKU \n\n- Correspondent SKU ID \n\n- SKU's price value \n\n- Inventory level \n\n- Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) that it is available at.",
                "operationId": "GetProductoffers",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "A string that identifies the seller's product. This is the ID that the marketplace will use for all references to this product, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/seller-leads": {
            "put": {
                "tags": ["Seller Invite"],
                "summary": "Invite Seller Lead",
                "description": "This API is used by marketplace operators to invite sellers to join their marketplace. The request sends an email to the seller, inviting sellers to activate their store. The invitation's link in the email is unique per user, and available for only seven days for the seller to click and begin activating their store. \n\nThe e-mail template is completely customizable. All e-mail templates that VTEX sends to seller leads can be found and edited in the marketplace's VTEX Admin, on the Message Center section.",
                "operationId": "CreateSellerLead",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexample"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSellerLeadRequest"
                            },
                            "example": {
                                "sellerEmail": "",
                                "sellerName": "",
                                "sellerAccountName": "",
                                "salesChannel": "",
                                "email": "",
                                "sellerType": 1,
                                "accountId": ""
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Seller Invite"],
                "summary": "List Seller Leads",
                "operationId": "ListSellerLeads",
                "description": "This call's response includes a list of all sellers invited by the marketplace operator to join them. Retrieved results can be filtered by adding optional query fields to the request. Each seller listed includes the following information: \n\n- `id` \n\n- `createdAt` \n\n- `status` \n\n- `isConnected` \n\n- `sellerEmail` \n\n- `sellerName` \n\n- `salesChannel` \n\n- `email`",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "This field determines the limit used to retrieve the list of sellers. The response includes objects starting `from` the value inputted here.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "This field determines the limit used to retrieve the list of sellers. The response includes objects until the value inputted here.            ",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 15
                        }
                    },
                    {
                        "name": "isConnected",
                        "in": "query",
                        "description": "Query param that enables results to be filter by whether the seller lead is already connected to the marketplace or not.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Custom search field, that filters sellers invited by specific marketplace operator's  email.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "user email"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Seller Lead's status. Includes `accepted`, `connected` or `invited`.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "invited"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Query param determining how data will be ordered in the response, ordering by name or ID in descending our ascending order. Includes the following values: \n\n`namesort` = desc/asc \n\n`idsort` = desc/asc",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/seller-leads/{sellerLeadId}": {
            "put": {
                "tags": ["Seller Invite"],
                "summary": "Accept Seller Lead",
                "operationId": "AcceptSellerLead",
                "description": "This endpoint is triggered by the seller onboarding wizard, once the seller confirms their invitation. It can be used by marketplace operators to manually accept seller leads, and carry on with their onboarding process. \n\nNote that there's no specific API call that allows status changes. The operations only allow the seller lead to move forward: \n\n From `invite` > to `Accept` > closing on `Create Seller`.  \n\nIf you want to change the status, you can start the process again, by deleting that lead through the *Delete Seller Lead* endpoint, and resending the invite through the *Resend Seller Lead's Invite* endpoint.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerLeadId",
                        "in": "path",
                        "description": "ID of the Seller Lead invited to the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcceptSellerLeadRequest"
                            },
                            "example": {
                                "sellerEmail": "",
                                "sellerName": "",
                                "sellerAccountName": "",
                                "salesChannel": "",
                                "email": "",
                                "sellerType": 1,
                                "accountId": ""
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Seller Invite"],
                "summary": "Get Seller Lead's Data by Id",
                "operationId": "RetrieveSellerLead",
                "description": "Marketplace operators may call this endpoint to retrieve information about a specific seller invited to the Seller Portal, by searching through their `Seller Lead Id`. To know the chosen seller's `sellerLeadId`, marketplace operators can count on the *List Sellers* endpoint's response as well. Each seller listed includes the following information: \n\n- `id` \n\n- `createdAt` \n\n- `status` \n\n- `isConnected` \n\n- `sellerEmail` \n\n- `sellerName` \n\n- `salesChannel` \n\n- `email`",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerLeadId",
                        "in": "path",
                        "description": "ID of the Seller Lead invited to the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Seller Invite"],
                "summary": "Delete Seller Lead",
                "description": "This endpoint permanently deletes a seller previously invited to the marketplace, who had already accepted the invitation.",
                "operationId": "RemoveSellerLead",
                "parameters": [
                    {
                        "name": "acountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerLeadId",
                        "in": "path",
                        "description": "ID of the Seller Lead invited to the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/seller-leads/{sellerLeadId}/seller": {
            "put": {
                "tags": ["Seller Invite"],
                "summary": "Create Seller From Lead",
                "operationId": "CreateSellerFromSellerLead",
                "description": "This endpoint is used by marketplace operators to create seller accounts. The request will only accept Seller Leads whose status is `accepted`. If they are already `connected` or `invited`, the call will not be fulfilled. \n\nThe creation of the account at VTEX is done by an internal Billing service. There is no seller account and marketplace affiliation if you do not go through this step. \n\nNote that there's no specific API call that allows status changes. The operations only allow the seller lead to move forward: \n\n From `invite` > to `Accept` > closing on `Create Seller`.  \n\nIf you want to change the status, you can start the process again, by deleting that lead through the *Delete Seller Lead* endpoint, and resending the invite through the *Resend Seller Lead's Invite* endpoint.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Marketplace's account name, the same one inputted on the endpoint's path.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "isActive",
                        "in": "query",
                        "description": "Whether the Seller Lead is `active` or not in Seller Portal. This request only supports the value `false` in this field. If that´s not the case, the request will respond with an internal error.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "sellerLeadId",
                        "in": "path",
                        "description": "ID of the Seller Lead invited to the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/seller-leads/{sellerLeadId}/status": {
            "put": {
                "tags": ["Seller Invite"],
                "summary": "Resend Seller Lead Invite",
                "description": "This endpoint allows marketplace operators to resend an invitation to a seller lead, previously invited to join their marketplace. The request will only accept Seller Leads whose status is `invited`. If they are already `connected` or `accepted`, the call will not be fulfilled.",
                "operationId": "ResendSellerLeadRequest",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerLeadId",
                        "in": "path",
                        "description": "ID of the Seller Lead invited to the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendSellerLeadRequestRequest"
                            },
                            "example": {
                                "status": "accepted"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/sellers/{sellerId}/commissions/categories": {
            "put": {
                "tags": ["Seller Commissions"],
                "summary": "Upsert Seller Commissions in Bulk",
                "description": "This endpoint is used by marketplace operators to define comissions for multiple categories.",
                "operationId": "BulkUpsertSellerCommissions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BulkUpsertSellerCommissionsRequest"
                                },
                                "description": "",
                                "example": [
                                    {
                                        "categoryId": "6",
                                        "categoryFullPath": null,
                                        "productCommissionPercentage": 9.85,
                                        "freightCommissionPercentage": 2.43
                                    }
                                ]
                            },
                            "example": [
                                {
                                    "categoryId": "6",
                                    "categoryFullPath": null,
                                    "productCommissionPercentage": 9.85,
                                    "freightCommissionPercentage": 2.43
                                }
                            ]
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/sellers/{sellerId}/commissions": {
            "get": {
                "tags": ["Seller Commissions"],
                "summary": "List Seller Commissions by seller ID",
                "description": "This endpoint retrieves all comissions configured for a specific seller.",
                "operationId": "ListSellerCommissions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/sellers/{sellerId}/commissions/{categoryId}": {
            "put": {
                "tags": ["Seller Commissions"],
                "summary": "Upsert Seller Commissions by Category ID",
                "operationId": "UpsertSellerCommissions",
                "description": "This endpoint is used by marketplace operators to define comissions for a single category, by ID.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category in which the comission will be applied.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "6"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertSellerCommissionsRequest"
                            },
                            "example": {
                                "categoryId": "6",
                                "categoryFullPath": null,
                                "productCommissionPercentage": 9.85,
                                "freightCommissionPercentage": 2.43
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["Seller Commissions"],
                "summary": "Remove Seller Commissions by Category ID",
                "operationId": "RemoveSellerCommissions",
                "description": "This endpoint removes a seller comission on the selected category.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category in which the comission was applied",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Seller Commissions"],
                "summary": "Get Seller Commissions by Category ID",
                "operationId": "RetrieveSellerCommissions",
                "description": "This endpoint retrieves seller comissions applied to the selected category.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category in which the comission was applied",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/sellers": {
            "put": {
                "tags": ["Sellers"],
                "summary": "Configure Seller Account",
                "description": "This endpoint is used by marketplace operators to configure the accounts of sellers that have already accepted the invitation to join their marketplaces. It should be called after the *Create Seller from Lead* request.  \n\nThis call includes all of the information a seller needs to acitvate their account. Without going through this step, the seller's account will not function properly.",
                "operationId": "PutUpsertSeller",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Marketplace's account name, the same one inputted on the endpoint's path.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertSellerRequest"
                            },
                            "example": {
                                "id": "testeMARCUS123",
                                "name": "qamarketplace",
                                "isActive": true,
                                "fulfillmentEndpoint": "http://fulfillment.vtexcommerce.com.br/api/fulfillment?an=parceiro01",
                                "allowHybridPayments": false,
                                "taxCode": "34444",
                                "email": "vtexqa1@vtex.com.br",
                                "description": "",
                                "sellerCommissionConfiguration": {
                                    "productCommissionPercentage": 3.0,
                                    "freightCommissionPercentage": 4.0,
                                    "categoriesCommissionConfiguration": []
                                },
                                "isBetterScope": false,
                                "sellerType": 1,
                                "availableSalesChannels": [
                                    {
                                        "isSelected": true,
                                        "id": 1,
                                        "name": "Loja Principal"
                                    },
                                    {
                                        "isSelected": true,
                                        "id": 2,
                                        "name": "Terceira"
                                    },
                                    {
                                        "isSelected": true,
                                        "id": 3,
                                        "name": "Marketplaces"
                                    }
                                ],
                                "CSCIdentification": "",
                                "account": "parceiro01",
                                "channel": "",
                                "salesChannel": "",
                                "isVtex": true,
                                "score": 0.0,
                                "exchangeReturnPolicy": "",
                                "deliveryPolicy": "",
                                "securityPrivacyPolicy": null,
                                "fulfillmentSellerId": ""
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Sellers"],
                "summary": "List Sellers",
                "description": "This endpoint lists all Sellers. This call's results can be filtered by [trade policies](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data) through the `sc` query param.",
                "operationId": "GetListSellers",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "sc",
                        "in": "query",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "1"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/{accountName}.{environment}.com.br/api/seller-register/pvt/sellers/{sellerId}": {
            "patch": {
                "tags": ["Sellers"],
                "summary": "Update Seller by Seller ID",
                "description": "This endpoint allows marketplace operators to update the information of sellers connected to their account.",
                "operationId": "UpdateSeller",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": ["Sellers"],
                "summary": "Get Seller data by ID",
                "operationId": "GetRetrieveSeller",
                "description": "Marketplace operator may call this endpoint to retrieve information about a specific seller by filtering by ID. It is also possible to filter results by sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) through the `sc` query param.",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "description": "Name of the VTEX account that belongs to the marketplace.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "showSC",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sc",
                        "in": "query",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "1"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        }
    },
    "security": [
        {
            "appKey": ["{{appKey}}"],
            "appToken": ["{{appToken}}"]
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            },
            "VtexIdclientAutCookie": {
                "type": "apiKey",
                "in": "header",
                "name": "VtexIdclientAutCookie"
            }
        },
        "schemas": {
            "SaveautoapproveforaccountRequest": {
                "title": "SaveautoapproveforaccountRequest",
                "required": ["Enabled"],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for an entire marketplace account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all received SKUs will be automatically approved on your store, regardless of the seller, or the Matcher Score.",
                        "default": true
                    }
                }
            },
            "SaveaccountconfigRequest": {
                "title": "SaveaccountconfigRequest",
                "required": [
                    "Score",
                    "Matchers",
                    "SpecificationsMapping",
                    "MatchFlux"
                ],
                "type": "object",
                "properties": {
                    "Score": {
                        "$ref": "#/components/schemas/Score"
                    },
                    "Matchers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Matcher"
                        },
                        "description": ""
                    },
                    "SpecificationsMapping": {
                        "type": "array",
                        "description": "This attribute maps product and SKU specifications.",
                        "items": {
                            "type": "string",
                            "default": "                    \"SellerId\": \"sellerID\",\n                    \"Mapping\": {\n                        \"Choose voltage\": \"Voltage\",\n                        \"Choose size\": \"Size\",\n                        \"Choose volume\": \"Volume\",\n                        \"Choose type\": \"Type\"\n                    }"
                        }
                    },
                    "MatchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "default": "autoApprove"
                    }
                },
                "example": {
                    "Score": {
                        "Approve": 80,
                        "Reject": 30
                    },
                    "Matchers": [
                        {
                            "MatcherId": "vtex-matcher",
                            "hook-base-address": "http://simple-suggestion-matcher.vtex.com.br",
                            "IsActive": true,
                            "UpdatesNotificationEndpoint": null,
                            "Description": null
                        }
                    ],
                    "SpecificationsMapping": [],
                    "MatchFlux": "AutoApprove"
                }
            },
            "Score": {
                "title": "Score",
                "description": "Matcher rates received SKUs, by comparing the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`. If the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "required": ["Approve", "Reject"],
                "type": "object",
                "properties": {
                    "Approve": {
                        "type": "integer",
                        "description": "Insert in this field the desired minimum score to approve SKUs. Note that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "format": "int32",
                        "default": 80
                    },
                    "Reject": {
                        "type": "integer",
                        "description": "Insert in this field the desired maximum score to reject SKUs. Note that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "format": "int32",
                        "default": 30
                    }
                }
            },
            "Matcher": {
                "title": "Matcher",
                "required": [
                    "MatcherId",
                    "hook-base-address",
                    "IsActive",
                    "UpdatesNotificationEndpoint"
                ],
                "type": "object",
                "properties": {
                    "MatcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                        "default": "vtex-matcher"
                    },
                    "hook-base-address": {
                        "type": "string",
                        "description": "The chosen Matcher's url. It is the endpoint that the Received SKUs module calls, to send new suggestions for the Matcher's review.",
                        "default": "http://simple-suggestion-matcher.vtex.com.br"
                    },
                    "IsActive": {
                        "type": "boolean",
                        "description": "Whether the matcher is active in the account, or not.",
                        "default": true
                    },
                    "UpdatesNotificationEndpoint": {
                        "type": "string",
                        "description": "The Received SKUs module uses this endpoint to send updates about a suggestion, to the chosen Matcher.",
                        "nullable": true,
                        "default": null
                    },
                    "Description": {
                        "type": "string",
                        "description": "Insert in this field any notes about the approval. This field is optional.",
                        "nullable": true,
                        "default": null
                    }
                }
            },
            "SaveautoapproveforaccountsellerRequest": {
                "title": "SaveautoapproveforaccountsellerRequest",
                "required": ["Enabled"],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for that specific seller account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all SKUs received from this seller will be automatically approved on your store regardless of the Matcher Score.",
                        "default": true
                    }
                }
            },
            "PutselleraccountconfigRequest": {
                "title": "PutselleraccountconfigRequest",
                "required": ["sellerId", "mapping", "matchFlux"],
                "type": "object",
                "properties": {
                    "sellerId": {
                        "type": "string",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "default": "seller123"
                    },
                    "mapping": {
                        "type": "object",
                        "description": "Mapping of SKU and product Specifications. This object should be sent in the following format for all fields you wish to map:\n\n{specificationName}:{specificationValue},\n\nExample:\n\nChoose voltage: Voltage,\n\nChoose size: Size",
                        "nullable": true,
                        "default": {
                            "Choose voltage": "Voltage",
                            "Choose size": "Size",
                            "Choose volume": "Volume",
                            "Choose type": "Type"
                        }
                    },
                    "matchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "default": "autoApprove"
                    }
                }
            },
            "SaveSuggestionRequest": {
                "title": "SaveSuggestionRequest",
                "required": [
                    "ProductName",
                    "ProductId",
                    "ProductDescription",
                    "price",
                    "BrandName",
                    "SkuName",
                    "SellerId",
                    "Height",
                    "Width",
                    "Length",
                    "WeightKg",
                    "Updated",
                    "RefId",
                    "CategoryFullPath",
                    "Images",
                    "EAN",
                    "AvailableQuantity",
                    "Pricing"
                ],
                "type": "object",
                "properties": {
                    "ProductName": {
                        "type": "string",
                        "description": "Name of the suggested product. This field has a limit of 150 characters.",
                        "default": ""
                    },
                    "ProductId": {
                        "type": "string",
                        "description": "Product ID in seller's account.",
                        "default": "1234"
                    },
                    "ProductDescription": {
                        "type": "string",
                        "description": "Product Description containing the main information about the product (not the SKU)."
                    },
                    "BrandName": {
                        "type": "string",
                        "description": "Name of the brand to which this SKU belongs. It must match the brand created in the marketplace."
                    },
                    "SkuName": {
                        "type": "string",
                        "description": "Name of the suggested SKU."
                    },
                    "SellerId": {
                        "type": "integer",
                        "description": "ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "default": 1
                    },
                    "Height": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Height of the SKU.",
                        "default": 10
                    },
                    "Width": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Width of the SKU.",
                        "default": 10
                    },
                    "Length": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Length of the SKU.",
                        "default": 10
                    },
                    "WeightKg": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Weight of the SKU in kilograms.",
                        "default": 10
                    },
                    "RefId": {
                        "type": "string",
                        "description": "SKU reference code. Mandotory if the EAN is not informed.",
                        "default": "REF10"
                    },
                    "EAN": {
                        "type": "string",
                        "description": "SKU reference code. Mandatory if the RefId is not informed.",
                        "default": "EAN10"
                    },
                    "SellerStockKeepingUnitId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the SKU registered in the seller."
                    },
                    "CategoryFullPath": {
                        "type": "string",
                        "description": "Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'."
                    },
                    "SkuSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuSpecification"
                        },
                        "description": "Array containing the names and values of the SKU specifications."
                    },
                    "ProductSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSpecification"
                        },
                        "description": "Array containing the names and values of the product specifications."
                    },
                    "Images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        },
                        "description": "Array containing the URLs and names the SKU images."
                    },
                    "MeasurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`."
                    },
                    "UnitMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`."
                    },
                    "AvailableQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": ""
                    },
                    "Pricing": {
                        "type": "object",
                        "properties": {
                            "Currency": {
                                "type": "string"
                            },
                            "SalePrice": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "CurrencySymbol": {
                                "type": "string"
                            }
                        },
                        "description": ""
                    }
                },
                "default": {
                    "ProductId": 321,
                    "ProductName": "Product sample",
                    "NameComplete": "My complete product name?",
                    "ProductDescription": "sample",
                    "BrandName": "Brand 1",
                    "SkuName": "Sku sample",
                    "SellerId": null,
                    "Height": 1,
                    "Width": 1,
                    "Length": 1,
                    "WeightKg": 1,
                    "Updated": null,
                    "RefId": "REFID123",
                    "SellerStockKeepingUnitId": 567,
                    "CategoryFullPath": "Category 1",
                    "Images": [
                        {
                            "imageName": "Principal",
                            "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                        }
                    ],
                    "ProductSpecifications": [
                        {
                            "fieldName": "prodspec1",
                            "fieldValues": "value1"
                        }
                    ],
                    "SkuSpecifications": [
                        {
                            "fieldName": "skuspec1",
                            "fieldValues": "value2"
                        }
                    ],
                    "EAN": "EAN123",
                    "MeasurementUnit": "un",
                    "UnitMultiplier": 1,
                    "AvailableQuantity": 111,
                    "Pricing": {
                        "Currency": "BRL",
                        "SalePrice": 399,
                        "CurrencySymbol": "R$"
                    }
                }
            },
            "SkuSpecification": {
                "title": "skuSpecification",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the SKU specification field. Example: 'Color'.",
                        "default": "color"
                    },
                    "fieldValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "Red",
                            "description": "Value of the SKU specification field."
                        },
                        "default": ["Red"],
                        "description": "Array with values of the SKU specification field. Example: 'Red'."
                    }
                },
                "default": {
                    "fieldName": "spec1",
                    "fieldValues": "value1"
                }
            },
            "ProductSpecification": {
                "title": "",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the product specification field. Example: 'Fabric'."
                    },
                    "fieldValues": {
                        "type": "array",
                        "description": "Value of the product specification field. Example: 'Cotton'.",
                        "items": {
                            "type": "string",
                            "default": "Cotton",
                            "description": "Value of the product specification field."
                        }
                    }
                },
                "example": {
                    "fieldName": "spec1",
                    "fieldValues": "value1"
                }
            },
            "Image": {
                "title": "Image",
                "required": ["imageName", "imageUrl"],
                "type": "object",
                "properties": {
                    "imageName": {
                        "type": "string",
                        "description": "Name of the SKU image."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL of the SKU image. The image must be sent through `https` protocol, otherwise it will not be rendered in VTEX Admin.",
                        "default": "https://imageurl.example"
                    }
                },
                "example": {
                    "imageName": "Principal",
                    "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                }
            },
            "MatchRequest": {
                "title": "",
                "required": ["matcherId", "score", "matchType"],
                "type": "object",
                "properties": {
                    "matcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                        "default": "vtex-matcher"
                    },
                    "matchType": {
                        "title": "",
                        "type": "string",
                        "description": "Define the action you want to apply to each SKU. Values include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "default": "itemMatch"
                    },
                    "score": {
                        "type": "string",
                        "description": "Matcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "default": "80"
                    },
                    "skuRef": {
                        "type": "string",
                        "nullable": true,
                        "description": "In `itemMatch` actions, fill in this field on your request to match the item to an existing SKU in the marketplace.",
                        "default": ""
                    },
                    "productRef": {
                        "type": "string",
                        "description": "In `productMatch` actions, fill in this field on your request to match the item to an existing product in the marketplace.",
                        "default": "",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Sku"
                    }
                },
                "example": {
                    "matcherId": "{{matcherid}}",
                    "score": "{{score}} (must be decimal)",
                    "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                    "productRef": "{{productRef}}(should be specified when match is a product match)",
                    "product": {
                        "name": "Produto exemplo",
                        "description": "Descricao exemplo",
                        "categoryId": 12,
                        "brandId": 1234567,
                        "specifications": null
                    },
                    "sku": {
                        "name": "Sku exemplo",
                        "eans": ["12345678901213"],
                        "refId": null,
                        "height": 1,
                        "width": 1,
                        "length": 1,
                        "weight": 1,
                        "images": {
                            "imagem1.jpg": "imageurl.example"
                        },
                        "unitMultiplier": 1,
                        "measurementUnit": "un",
                        "specifications": {
                            "Embalagem": "3 kg"
                        }
                    }
                }
            },
            "Product": {
                "title": "Product",
                "required": [
                    "name",
                    "description",
                    "categoryId",
                    "brandId",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the product that will be matched.",
                        "default": "Book"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product's description.",
                        "default": "Description of the product, how it will appear on the marketplace."
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The categoryId is already mapped through the Get Suggestions API. You can choose to keep the same suggested categoryID, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                        "default": 12
                    },
                    "brandId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The brandId is already mapped through the Get Suggestions API. This field is nulled when the inserted value is 0.",
                        "default": 1234567
                    },
                    "specifications": {
                        "type": "string",
                        "description": "This field is optional. Add here any product specifications or details.",
                        "default": "",
                        "nullable": true
                    }
                }
            },
            "Sku": {
                "title": "SKU",
                "required": [
                    "name",
                    "eans",
                    "refId",
                    "height",
                    "width",
                    "length",
                    "weight",
                    "images",
                    "unitMultiplier",
                    "measurementUnit",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "eans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SKU reference code.",
                        "default": ""
                    },
                    "refId": {
                        "type": "string",
                        "description": "SKU reference code.",
                        "default": "",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Height of the SKU.",
                        "default": 10
                    },
                    "width": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Width of the SKU.",
                        "default": ""
                    },
                    "length": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Length of the SKU.",
                        "default": ""
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight of the SKU.",
                        "default": ""
                    },
                    "images": {
                        "$ref": "#/components/schemas/Images"
                    },
                    "unitMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1.",
                        "default": "1"
                    },
                    "measurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un.",
                        "default": ""
                    },
                    "specifications": {
                        "$ref": "#/components/schemas/Specifications"
                    }
                },
                "example": {
                    "name": "Sku exemplo",
                    "eans": ["12345678901213"],
                    "refId": null,
                    "height": 1,
                    "width": 1,
                    "length": 1,
                    "weight": 1,
                    "images": {
                        "imagem1.jpg": "imageurl.example"
                    },
                    "unitMultiplier": 1,
                    "measurementUnit": "un",
                    "specifications": {
                        "Embalagem": "3 kg"
                    }
                }
            },
            "Images": {
                "title": "Images",
                "required": ["imagem1.jpg"],
                "type": "array",
                "properties": {
                    "imagem1.jpg": {
                        "type": "string",
                        "description": "Array containing the URLs of the SKU's images.  The image must be sent through `https` protocol, otherwise it will not be rendered in VTEX Admin.",
                        "default": {
                            "imagem1.jpg": "https://imageurl.example"
                        }
                    }
                },
                "example": {
                    "imagem1.jpg": "imageurl.example"
                }
            },
            "Specifications": {
                "title": "Specifications",
                "required": ["Embalagem"],
                "type": "object",
                "properties": {
                    "Embalagem": {
                        "type": "string",
                        "description": "Packaging specifications. Should include package's weight."
                    }
                },
                "example": {
                    "Embalagem": "3 kg"
                }
            },
            "MatchMultiple": {
                "title": "MatchMultiple",
                "type": "array",
                "properties": {
                    "object": {
                        "type": "object",
                        "title": "",
                        "required": [
                            "itemId",
                            "versionId",
                            "matchId",
                            "matcherId",
                            "categoryId",
                            "sellerId"
                        ],
                        "properties": {
                            "itemId": {
                                "type": "string",
                                "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                                "default": ""
                            },
                            "versionId": {
                                "type": "string",
                                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id). through the `latestVersionId` field.",
                                "default": ""
                            },
                            "matchId": {
                                "type": "string",
                                "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                                "default": "vtex-matcher"
                            },
                            "matcherId": {
                                "type": "string",
                                "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id) endpoint.",
                                "default": "vtex-matcher"
                            },
                            "categoryId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true,
                                "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                                "default": 12
                            },
                            "brandId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true,
                                "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The `brandId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/get-suggestions-1#get-sku-suggestions-by-id). This field is nulled when the inserted value is 0, and is mandatory for the 'newproduct' action.",
                                "default": 1234567
                            },
                            "skuRef": {
                                "type": "string",
                                "nullable": true,
                                "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the 'skuassociation' action.",
                                "default": ""
                            },
                            "productRef": {
                                "type": "string",
                                "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the 'productassociation' action.",
                                "default": "",
                                "nullable": true
                            },
                            "sellerId": {
                                "type": "string",
                                "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                                "default": "seller123"
                            }
                        }
                    }
                }
            },
            "ReviewFields": {
                "type": "object",
                "title": "ReviewFields",
                "description": "Review fields submitted by marketplace operators, so sellers review and correct their sent SKUs.",
                "default": {},
                "required": ["field1", "field2"],
                "properties": {
                    "field1": {
                        "type": "string",
                        "title": "field1",
                        "description": "Operators can add as many fields to their request body as they like. The field’s name can also be customized, indicating the SKUs'  attributes that contained errors, so sellers know exactly what fields need their review. For example: instead of `field1`, operators can name this attribute as `productDescription`, `productImage`, or `productName`.  \n\nThe field's value should describe what the problem with the attribute is, adding  instructing sellers on how to fix the problems found on their sent SKUs. For example: instead of `review instructions 1`, operators can add the following values to this attribute: `Description exceeds character limit`, `Image has low quality`.",
                        "default": "review instructions 1"
                    },
                    "field2": {
                        "type": "string",
                        "title": "field2",
                        "description": "Operators can add as many fields to their request body as they like. The field’s name can also be customized, indicating the SKUs'  attributes that contained errors, so sellers know exactly what fields need their review. For example: instead of `field1`, operators can name this attribute as `productDescription`, `productImage`, or `productName`.  \n\nThe field's value should describe what the problem with the attribute is, adding  instructing sellers on how to fix the problems found on their sent SKUs. For example: instead of `review instructions 1`, operators can add the following values to this attribute: `Description exceeds character limit`, `Image has low quality`.",
                        "default": "review instructions 2"
                    }
                }
            },
            "UpsertConfigurationRequest": {
                "title": "",
                "required": ["elasticSearchEndpoints"],
                "type": "object",
                "properties": {
                    "elasticSearchEndpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElasticSearchEndpoint"
                        },
                        "description": ""
                    }
                },
                "example": {
                    "elasticSearchEndpoints": [
                        {
                            "endpoint": "",
                            "read": true,
                            "write": true
                        }
                    ]
                }
            },
            "ElasticSearchEndpoint": {
                "title": "",
                "required": ["endpoint", "read", "write"],
                "type": "object",
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                },
                "example": {
                    "endpoint": "",
                    "read": true,
                    "write": true
                }
            },
            "BulkUpsertSellerCommissionsRequest": {
                "title": "",
                "required": [
                    "categoryId",
                    "categoryFullPath",
                    "productCommissionPercentage",
                    "freightCommissionPercentage"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog.",
                        "default": "6"
                    },
                    "categoryFullPath": {
                        "type": "string",
                        "nullable": true,
                        "description": "Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'.",
                        "default": "Appliances/Oven"
                    },
                    "productCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the product in decimals.",
                        "default": 9.85
                    },
                    "freightCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the freight in decimals.",
                        "default": 2.43
                    }
                },
                "example": {
                    "categoryId": "6",
                    "categoryFullPath": null,
                    "productCommissionPercentage": 9.85,
                    "freightCommissionPercentage": 2.43
                }
            },
            "UpsertSellerCommissionsRequest": {
                "title": "",
                "required": [
                    "categoryId",
                    "categoryFullPath",
                    "productCommissionPercentage",
                    "freightCommissionPercentage"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog.",
                        "default": "6"
                    },
                    "categoryFullPath": {
                        "type": "string",
                        "nullable": true,
                        "description": "Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'.",
                        "default": "Appliances/Oven"
                    },
                    "productCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the product in decimals.",
                        "default": 9.85
                    },
                    "freightCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the freight in decimals.",
                        "default": 2.43
                    }
                },
                "example": {
                    "categoryId": "6",
                    "categoryFullPath": null,
                    "productCommissionPercentage": 9.85,
                    "freightCommissionPercentage": 2.43
                }
            },
            "CreateSellerLeadRequest": {
                "title": "",
                "required": [
                    "sellerEmail",
                    "sellerName",
                    "sellerAccountName",
                    "salesChannel",
                    "email",
                    "sellerType",
                    "accountId",
                    "accountable",
                    "hasAcceptedLegalTerms",
                    "address",
                    "document"
                ],
                "type": "object",
                "properties": {
                    "sellerEmail": {
                        "type": "string",
                        "description": "Seller's contact email;",
                        "default": "selleremail@email.com"
                    },
                    "sellerName": {
                        "type": "string",
                        "description": "Seller's store's name.",
                        "default": "Seller Name"
                    },
                    "sellerAccountName": {
                        "type": "string",
                        "description": "Name of the seller's account, part of the url of their VTEX Admin.",
                        "default": "seller123"
                    },
                    "salesChannel": {
                        "type": "string",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                        "default": "1"
                    },
                    "email": {
                        "type": "string",
                        "default": "email@email.com"
                    },
                    "sellerType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Type of seller, including: \n\n`1`: regular seller \n\n`2`: whitelabel seller",
                        "default": 1
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Marketplace's account ID",
                        "default": "5fb38ace-d95e-45ad-970d-ee97cce9fbcd"
                    },
                    "document": {
                        "type": "string",
                        "description": "Company's legal document code.",
                        "default": "12345671000"
                    },
                    "hasAcceptedLegalTerms": {
                        "type": "boolean",
                        "description": "Indicates if the seller has accepted the platform's legal terms and conditions.",
                        "default": "true"
                    },
                    "address": {
                        "$ref": "#/components/schemas/address"
                    },
                    "accountable": {
                        "$ref": "#/components/schemas/accountable"
                    }
                }
            },
            "accountable": {
                "type": "object",
                "title": "accountable",
                "required": ["name", "email", "phone"],
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "name",
                        "description": "Name of the person responsible for the seller.",
                        "default": "Jane Smith"
                    },
                    "email": {
                        "type": "string",
                        "title": "email",
                        "description": "Email address of the person responsible for the seller.",
                        "default": "email@email.com"
                    },
                    "phone": {
                        "type": "string",
                        "title": "phone",
                        "description": "Phone number of the person responsible for the seller.",
                        "default": "1234567890"
                    }
                }
            },
            "address": {
                "type": "object",
                "title": "address",
                "required": [
                    "postalcode",
                    "complement",
                    "street",
                    "number",
                    "neighborhood",
                    "state",
                    "city"
                ],
                "properties": {
                    "postalcode": {
                        "type": "string",
                        "title": "postalCode",
                        "description": "Postal code from the seller's address.",
                        "default": "12345678"
                    },
                    "complement": {
                        "type": "string",
                        "title": "complement",
                        "description": "Seller's address complement.",
                        "default": "Appartment 1234"
                    },
                    "street": {
                        "type": "string",
                        "title": "street",
                        "description": "Street information, from the seller's address.",
                        "default": "VTEX street"
                    },
                    "number": {
                        "type": "string",
                        "title": "number",
                        "description": "Street's number, from the seller's address.",
                        "default": "25"
                    },
                    "neighborhood": {
                        "type": "string",
                        "title": "The neighborhood schema",
                        "description": "Seller's address neighborhood.",
                        "default": "VTEX quarter"
                    },
                    "state": {
                        "type": "string",
                        "title": "state",
                        "description": "State, from the seller's address.",
                        "default": "RJ"
                    },
                    "city": {
                        "type": "string",
                        "title": "city",
                        "description": "City name, from the seller's address.",
                        "default": "Rio de Janeiro"
                    }
                }
            },
            "AcceptSellerLeadRequest": {
                "title": "",
                "required": [
                    "sellerEmail",
                    "sellerName",
                    "sellerAccountName",
                    "salesChannel",
                    "email",
                    "sellerType",
                    "accountId",
                    "document",
                    "hasAcceptedLegalTerms",
                    "address",
                    "accountable"
                ],
                "type": "object",
                "properties": {
                    "sellerEmail": {
                        "type": "string",
                        "description": "Seller's contact email.",
                        "default": "selleremail@email.com"
                    },
                    "sellerName": {
                        "type": "string",
                        "description": "Seller's store's name.",
                        "default": "Seller Name"
                    },
                    "sellerAccountName": {
                        "type": "string",
                        "description": "Name of the seller's account, part of the url of their VTEX Admin.",
                        "default": "seller123"
                    },
                    "salesChannel": {
                        "type": "string",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                        "default": "1"
                    },
                    "email": {
                        "type": "string",
                        "description": "email of the admin responsible for the seller.",
                        "default": "seller@email.com"
                    },
                    "sellerType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Type of seller, including: \n\n`1`: regular seller \n\n`2`: whitelabel seller",
                        "default": 1
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Marketplace's account ID",
                        "default": "5fb38ace-d95e-45ad-970d-ee97cce9fbcd"
                    },
                    "document": {
                        "type": "string",
                        "description": "Company's legal document code.",
                        "default": "12345671000"
                    },
                    "hasAcceptedLegalTerms": {
                        "type": "boolean",
                        "description": "Indicates if the seller has accepted the platform's legal terms and conditions.",
                        "default": "true"
                    },
                    "address": {
                        "$ref": "#/components/schemas/address"
                    },
                    "accountable": {
                        "$ref": "#/components/schemas/accountable"
                    }
                },
                "example": {
                    "sellerEmail": "",
                    "sellerName": "",
                    "affiliateId": "",
                    "sellerAccountName": "",
                    "salesChannel": "",
                    "email": "",
                    "sellerType": 1,
                    "accountId": ""
                }
            },
            "ResendSellerLeadRequestRequest": {
                "title": "",
                "required": ["status"],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Seller Lead's status. Includes `accepted`, `connected` or `invited`.",
                        "default": "accepted"
                    }
                },
                "example": {
                    "status": "accepted"
                }
            },
            "UpsertSellerRequest": {
                "title": "",
                "required": [
                    "id",
                    "name",
                    "isActive",
                    "fulfillmentEndpoint",
                    "allowHybridPayments",
                    "taxCode",
                    "email",
                    "description",
                    "sellerCommissionConfiguration",
                    "isBetterScope",
                    "sellerType",
                    "availableSalesChannels",
                    "CSCIdentification",
                    "account",
                    "channel",
                    "salesChannel",
                    "isVtex",
                    "score",
                    "exchangeReturnPolicy",
                    "deliveryPolicy",
                    "securityPrivacyPolicy",
                    "fulfillmentSellerId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Seller ID assigned by the marketplace. We recommend filling it in with the seller's account name.",
                        "default": "seller123"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the seller's store, configured in the seller's environment.",
                        "default": "Seller Name"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Whether the seller is active on the marketplace or not.",
                        "default": "true"
                    },
                    "fulfillmentEndpoint": {
                        "type": "string",
                        "description": "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. \n\nFor **external sellers**, please include the URL of the seller's endpoint. External sellers have different endpoint standards. The seller must inform this endpoint to the marketplace so that the marketplace can complete the configuration process. \n\nFor **VTEX Stores**, the field format will be as follows: `http://{SellerName}.vtexcommercestable.com.br/api/fulfillment?&sc={TradePolicyID}`. \n\nThe value `SellerName` corresponds to the store name if the seller is a VTEX store. \n\nThe value `TradePolicyID` corresponds to the [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data) created by the seller in their own VTEX environment. The seller must inform this ID to the marketplace so that the marketplace can complete the configuration process. \n\nThe value `AffiliateID` corresponds to the 3-digit affiliate identification code created by the seller. The seller must inform this ID to the marketplace so that the marketplace can complete the configuration process. \n\n",
                        "default": "http://{SellerName}.vtexcommercestable.com.br/api/fulfillment?&sc={TradePolicyID}"
                    },
                    "allowHybridPayments": {
                        "type": "boolean",
                        "description": "Flag that allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller.",
                        "default": "false"
                    },
                    "taxCode": {
                        "type": "string",
                        "description": "This code is the Identity Number for the legal entity and is linked to information in its base country.",
                        "default": "34444"
                    },
                    "email": {
                        "type": "string",
                        "description": "email of the admin responsible for the seller.",
                        "default": "seller@email.com"
                    },
                    "description": {
                        "type": "string",
                        "description": "String describing the seller",
                        "default": "Seller A, from the B industry."
                    },
                    "sellerCommissionConfiguration": {
                        "$ref": "#/components/schemas/SellerCommissionConfiguration"
                    },
                    "isBetterScope": {
                        "type": "boolean",
                        "description": "Flag used by the VTEX Checkout to simmulate shopping carts, products and shipping only in sellers with the boolean set as `true`, avoiding performance issues."
                    },
                    "sellerType": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Type of seller, including: \n\n`1`: regular seller \n\n`2`: whitelabel seller",
                        "default": 1
                    },
                    "availableSalesChannels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvailableSalesChannel"
                        },
                        "description": ""
                    },
                    "CSCIdentification": {
                        "type": "string",
                        "description": ""
                    },
                    "account": {
                        "type": "string",
                        "description": "Seller's account name",
                        "default": "partner01"
                    },
                    "channel": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "salesChannel": {
                        "type": "string",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                        "default": "1"
                    },
                    "isVtex": {
                        "type": "boolean",
                        "description": "Flag determining whether the seller configured is a VTEX store or not.",
                        "default": "true"
                    },
                    "score": {
                        "type": "number",
                        "description": "",
                        "default": ""
                    },
                    "exchangeReturnPolicy": {
                        "type": "string",
                        "description": "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                        "default": "Describe exchange and returns policy"
                    },
                    "deliveryPolicy": {
                        "type": "string",
                        "description": "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                        "default": "Describe delivery policy"
                    },
                    "securityPrivacyPolicy": {
                        "type": "string",
                        "nullable": true,
                        "description": " Text describing the security policy previously agreed between the marketplace and the seller.",
                        "default": "Describe privacy and security policy"
                    },
                    "fulfillmentSellerId": {
                        "type": "string",
                        "description": " Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be nulled.",
                        "default": "seller1"
                    }
                },
                "example": {
                    "id": "testeMARCUS123",
                    "name": "qamarketplace",
                    "isActive": true,
                    "fulfillmentEndpoint": "http://fulfillment.vtexcommerce.com.br/api/fulfillment?an=parceiro01",
                    "allowHybridPayments": false,
                    "taxCode": "34444",
                    "email": "vtexqa1@vtex.com.br",
                    "description": "",
                    "sellerCommissionConfiguration": {
                        "productCommissionPercentage": 3.0,
                        "freightCommissionPercentage": 4.0,
                        "categoriesCommissionConfiguration": []
                    },
                    "isBetterScope": false,
                    "sellerType": 1,
                    "availableSalesChannels": [
                        {
                            "isSelected": true,
                            "id": 1,
                            "name": "Loja Principal"
                        },
                        {
                            "isSelected": true,
                            "id": 2,
                            "name": "Terceira"
                        },
                        {
                            "isSelected": true,
                            "id": 3,
                            "name": "Marketplaces"
                        }
                    ],
                    "CSCIdentification": "",
                    "account": "parceiro01",
                    "channel": "",
                    "salesChannel": "",
                    "isVtex": true,
                    "score": 0.0,
                    "exchangeReturnPolicy": "",
                    "deliveryPolicy": "",
                    "securityPrivacyPolicy": null,
                    "fulfillmentSellerId": ""
                }
            },
            "SellerCommissionConfiguration": {
                "title": "",
                "required": [
                    "productCommissionPercentage",
                    "freightCommissionPercentage",
                    "categoriesCommissionConfiguration"
                ],
                "type": "object",
                "properties": {
                    "productCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the product in decimals.",
                        "default": 9.85
                    },
                    "freightCommissionPercentage": {
                        "type": "number",
                        "description": "Percentage of the comission applied to the freight in decimals.",
                        "default": 2.43
                    },
                    "categoriesCommissionConfiguration": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array with percentage of the comission applied to categories in decimals.",
                        "default": {
                            "productCommissionPercentage": 3.0,
                            "freightCommissionPercentage": 4.0,
                            "categoriesCommissionConfiguration": []
                        }
                    }
                },
                "example": {
                    "productCommissionPercentage": 3.0,
                    "freightCommissionPercentage": 4.0,
                    "categoriesCommissionConfiguration": []
                }
            },
            "AvailableSalesChannel": {
                "title": "",
                "required": ["isSelected", "id", "name"],
                "type": "object",
                "properties": {
                    "isSelected": {
                        "type": "boolean",
                        "description": "Flag defining if the sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) is selected or not.",
                        "default": "true"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Sales Channel's ID.",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Sales Channel.",
                        "default": "Main Store"
                    }
                },
                "example": {
                    "isSelected": true,
                    "id": 1,
                    "name": "Loja Principal"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Sellers",
            "description": "Get sellers' data"
        },
        {
            "name": "Seller Invite",
            "description": "Used to invite sellers and configure their accounts"
        },
        {
            "name": "Seller Commissions",
            "description": "Get sellers' data"
        },
        {
            "name": "Notifications"
        },
        {
            "name": "Get Suggestions",
            "description": "Search and filter all suggestions using specific criteria"
        },
        {
            "name": "Manage Suggestions",
            "description": "Send or delete SKU suggestions from the seller to marketplace"
        },
        {
            "name": "Get Versions",
            "description": "Search and filter all versions of suggestions, using specific criteria"
        },
        {
            "name": "SKU Approval Settings"
        },
        {
            "name": "Match Received SKUs",
            "description": "Match SKU suggestions received in the marketplace"
        },
        {
            "name": "Review Received SKUs",
            "description": "Request review for received SKUs"
        },
        {
            "name": "Matched Offers",
            "description": ""
        },
        {
            "name": "Seller Portal",
            "description": ""
        }
    ]
}
