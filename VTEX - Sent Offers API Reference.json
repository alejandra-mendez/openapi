{
    "openapi": "3.0.0",
    "info": {
        "title": "Sent Offers API - Connector integration",
        "description": "For vendors and who their catalog daily through numerous channels, the Sent Offers is an admin that provides visibility, autonomy and easiness on catalog management. This solution allows sellers to scale their presence into new channels and have a reliable control of their offers. <br> It is necessary to connect your service to the VTEX Sent Offers feature, so that vendors can have updated information about their offers in your marketplace.</br>",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "{accountName}.vtexcommercestable.com.br/api",
            "description": "VTEX server url",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "default": "apiexamples"
                }
            }
        }
    ],
    "paths": {
        "/productfeed/config": {
            "post": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Create Product Feed",
                "description": "The integration starts with the creation of the Feed. This API is used to establish the connection between connector and vendor through the Sent Offers. It should only be used once. Its response retrieves the `feedId` attribute which will be used in other API calls in this guide. ",
                "operationId": "Create",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/notificator/catalog": {
            "post": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Receive Products",
                "description": "Through this endpoint, the Broadcaster sends SKUs and all their information to the connector. It should be used during the initial steps of the integration, for the first load of products, or whenever the connector needs to manually receive information about SKUs. VTEX Broadcaster is the agent that notifies other systems about any changes in the Catalog. ",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/workflow": {
            "post": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Create Workflow",
                "description": "Workflows are the medium where VTEX and marketplaces interact about a specific event. Workflows can be added by the connector or the vendor, depending on who’s the agent responsible for the event. They are how both agents inform the Sent Offers about any changes made in an offer, in price, inventory, catalog information or status, for example. For every change that happens to the offer, the connector must create a workflow notifying it, or update an existing workflow.",
                "operationId": "CreateWorkflow",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkflowRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/workflow/{workflowId}/entry": {
            "post": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Create an Entry",
                "description": "This endpoint adds events about the offers sent in the Workflow's timeline. To add entries in the Workflow, the connector must take the workflowId received from the Broadcaster’s notification.",
                "operationId": "CreateEntry",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "This attribute comes from the Broadcaster's response in API calls for notifications of change.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEntryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/workflow/{workflowId}/entry/{entryId}": {
            "get": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Get Entry",
                "description": "Retrieves the information of a given entry, by searching through its entryId.",
                "operationId": "GetEntry",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "This attribute comes from the Broadcaster's response in API calls for notifications of change.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "description": "This attribute is obtained from the Create Entry API response. Or from the response of a GET Workflow call.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/workflow/{workflowId}": {
            "put": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Update Workflow",
                "description": "The connector is responsible for updating any changes in an offer’s price and inventory. Whenever there’s an event that updates information in an existing workflow, it must be done through this API call. The connector will call the Update Workflow API and update the information in the workflow created previously.",
                "operationId": "UpdateWorkflow",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "This attribute comes from the Broadcaster's response in API calls for notifications of change.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkflowRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/sku/{skuId}/status": {
            "put": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Update Offer Status",
                "description": "The connector is the operator of the channel, so it is the agent that knows the status of an offer. The connector must update the status of the offer (or discard the offer), by calling the Sent Offers through this endpoint.",
                "operationId": "UpdateSkuStatus",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "This attribute is the SKU ID in the vendor's perspective, registered in the VTEX Catalog.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSkuStatusRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/pendencygroup": {
            "get": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Get Errors",
                "description": "This endpoint retrieves all the error codes currently available in the Sent Offers' configuration. Its response is the single source of truth for the updated list of error codes. The connector will retrieve all the error codes available directly on this API, and use the codes that apply the most to their error scenarios. Then, the connector will implement these codes into every validation error inside their system.",
                "operationId": "GetSkuPendencies",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/productfeed/{feedId}/sku/{skuId}/pendency": {
            "put": {
                "tags": [
                    "Sent Offers"
                ],
                "summary": "Create an Error",
                "description": "This endpoint allows the connector to notify the Sent Offers that an error has occurred. The connectors will add an error to an offer by leveraging the information from the Code List (retrieved in the Get Errors API), and the workflow ID. They must also add custom information through the request body, like title and description.",
                "operationId": "Addpendencies",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "feedId",
                        "in": "path",
                        "description": "This attribute comes from the response that the Create Product Feed API sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "This attribute is the SKU ID in the vendor's perspective, registered in the VTEX Catalog.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AddpendenciesRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            }
        },
        "schemas": {
            "CreateWorkflowRequest": {
                "title": "CreateWorkflowRequest",
                "required": [
                    "skuId",
                    "skuName",
                    "creationDate",
                    "type",
                    "flag"
                ],
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "string",
                        "description": "This attribute is the SKU ID in the vendor's perspective, registered in the VTEX Catalog.",
                        "default": "124"
                    },
                    "marketplaceSkuid": {
                        "type": "string",
                        "default": "5908",
                        "description": "SKU ID from the connector’s perspective, not the SKU ID from the vendor's VTEX Catalog."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Identifies the currency used in updates in price. The required format is the international currency code. This field is only mandatory for updates in Price.",
                        "default": "BRL"
                    },
                    "mainImageUrl": {
                        "type": "string",
                        "description": "URL for this SKU’s image.",
                        "default": ""
                    },
                    "skuName": {
                        "type": "string",
                        "description": "Name of the SKU.",
                        "default": "HDMI cable"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Workflow creation date, following this format: YYYY-MM-DDThh:mm:ss",
                        "default": "2020-03-27T14:04:27.1320848+00:00"
                    },
                    "type": {
                        "type": "string",
                        "description": "Identifies what agent created the workflow. Possible values for this field include: 'Marketplace' or 'Seller'.",
                        "default": "Marketplace"
                    },
                    "flag": {
                        "type": "string",
                        "description": "Identifies what the workflow is about. Possible values for this field include: 'Catalog', 'Inventory' or 'Price'",
                        "default": "Inventory"
                    },
                    "value": {
                        "type": "number",
                        "description": "This field allows Price or Inventory values, depending on what you will update. If you update a workflow created as Price, you should add the price in the value attribute. If it's an Inventory update, you should add the number of items of that SKU in your inventory.",
                        "default": "10.0"
                    },
                    "EAN": {
                        "type": "string",
                        "description": "SKU's EAN data.",
                        "nullable": true,
                        "default": "9900004712767"
                    }
                }
            },
            "CreateEntryRequest": {
                "title": "CreateEntryRequest",
                "required": [
                    "message",
                    "eventDate",
                    "status",
                    "agent",
                    "evidence"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Text that describes the entry created. It should describe what process just happened, and all the relevant information the user needs to to understand the entry.",
                        "default": ""
                    },
                    "eventDate": {
                        "type": "string",
                        "description": "Entry’s creation date, following this format: YYYY-MM-DDThh:mm:ss. This field is vital to keep the chronological order of entries in the Workflow.",
                        "default": "2020-03-27T13:04:27.1627612+00:00"
                    },
                    "status": {
                        "type": "string",
                        "description": "Possible statuses include Success or Error",
                        "default": "Success"
                    },
                    "agent": {
                        "type": "string",
                        "description": "Entity responsible for creating the entry",
                        "default": "Broadcaster"
                    },
                    "evidence": {
                        "$ref": "#/components/schemas/Evidence"
                    }
                }
            },
            "Evidence": {
                "title": "Evidence",
                "description": "curl with the call that the connector has made for a VTEX system. It will provide the evidence needed to contextualize the entry, if the user needs to fully understand the process ocurred, or solve any errors.",
                "required": [
                    "request",
                    "response"
                ],
                "type": "object",
                "properties": {
                    "request": {
                        "type": "string",
                        "description": "curl with the request call that the connector has made for a VTEX system. It will provide the evidence needed to contextualize the entry, if the user needs to fully understand the process ocurred, or solve any errors."
                    },
                    "response": {
                        "type": "string",
                        "description": "curl with the response of the call that the connector has made for a VTEX system. It will provide the evidence needed to contextualize the entry, if the user needs to fully understand the process ocurred, or solve any errors."
                    }
                },
                "default": {
                    "request": "GET https://www.vtex.com",
                    "response": "200 Ok"
                }
            },
            "UpdateWorkflowRequest": {
                "title": "UpdateWorkflowRequest",
                "required": [
                    "value",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "default": "10.0",
                        "description": "This field allows Price or Inventory values, depending on what you will update. If you update a workflow created as Price, you should add the price in the value attribute. If it's an Inventory update, you should add the number of items of that SKU in your inventory."
                    },
                    "status": {
                        "type": "string",
                        "default": "Success",
                        "description": "Workflow's status. Values include `Success` or `Error`."
                    },
                    "currency": {
                        "type": "string",
                        "default": "BRL",
                        "description": "Identifies the currency used in updates in price. The required format is the international currency code. This field is only mandatory for updates in Price."
                    },
                    "marketplaceSkuid": {
                        "type": "string",
                        "default": "5908",
                        "description": "SKU ID from the connector’s perspective, not the SKU ID from the vendor's VTEX Catalog."
                    },
                    "EAN": {
                        "type": "string",
                        "default": "9900004712767",
                        "description": "SKU’s EAN data.",
                        "nullable": true
                    },
                    "mainImageUrl": {
                        "type": "string",
                        "default": "",
                        "description": "URL for this SKU’s image.",
                        "nullable": true
                    }
                }
            },
            "AddpendenciesRequest": {
                "title": "AddpendenciesRequest",
                "required": [
                    "code",
                    "title",
                    "description",
                    "workflowId",
                    "language"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "default": "PDT-001",
                        "description": "Sent Offer's error codes. You can find the possible values for this attribute from the code list retrieved from the Get Errors API."
                    },
                    "externalCode": {
                        "type": "string",
                        "default": "",
                        "description": "Connectors may fill this field in case they have their own error code in their system."
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "default": "SKU Description Error",
                        "description": "The title should describe concisely what is the problem. This is what will appear in the UI when the user faces any errors."
                    },
                    "description": {
                        "type": "string",
                        "default": "This product does not have a description, so it can't be sent to the Marketplace.",
                        "description": "The description should describe concisely what is the problem. This is what will appear in the UI when the user faces any errors."
                    },
                    "workflowId": {
                        "type": "string",
                        "default": "FkorhXIBNmDQiTOoXKLa",
                        "description": "This attribute comes from the Broadcaster's response in API calls for notifications of change."
                    },
                    "language": {
                        "type": "string",
                        "default": "pt-BR",
                        "description": "This field allows our VTEX API to translate the messages from the connector to any language. The format follows the ISO 639-1 standard language codes."
                    },
                    "closableTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": "",
                        "description": "This field describes the origin of the error. It should be used when there’s a divergence between where the problem originated, and what module it ended up affecting"
                    }
                }
            },
            "UpdateSkuStatusRequest": {
                "title": "UpdateSkuStatusRequest",
                "required": [
                    "status",
                    "isListed",
                    "isActive"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Offer's status. Possible values for this field include: error, pending, healthy, rejected.",
                        "default": "pending"
                    },
                    "isListed": {
                        "type": "boolean",
                        "description": "Mark this field as true if the offer was cataloged in the Marketplace.",
                        "default": "false"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Mark this field as true if the offer is active in the Marketplace.",
                        "default": "false"
                    }
                }
            },
            "CreateRequest": {
                "title": "CreateRequest",
                "required": [
                    "notificationEndpoint",
                    "salesPolicy",
                    "name",
                    "logoUrl",
                    "affiliateId"
                ],
                "type": "object",
                "properties": {
                    "notificationEndpoint": {
                        "type": "string",
                        "description": "The Broadcaster uses this field to notify the integration about any changes. It is the same that vendors use to register affiliates in their VTEX stores.",
                        "default": ""
                    },
                    "salesPolicy": {
                        "type": "string",
                        "description": "This attribute is acquired by the vendor, from the Bridge’s configuration.",
                        "default": ""
                    },
                    "name": {
                        "type": "string",
                        "description": "Marketplace’s name, how it will be shown in the interface.",
                        "default": ""
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Marketplace's logo that will be shown in the interface.",
                        "default": ""
                    },
                    "affiliateId": {
                        "type": "string",
                        "description": "This attribute is acquired by the vendor, from the Bridge’s configuration.",
                        "default": ""
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Sent Offers"
        }
    ]
}